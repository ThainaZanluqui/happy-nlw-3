{"ast":null,"code":"export default function getValidatorError(err) {\n  const validationError = {};\n  err.inner.forEach(error => {\n    validationError[error.path] = error.message;\n  });\n  return validationError;\n}","map":{"version":3,"sources":["/home/cloudnettha/projetos/rocketseat/nlw/happy-nlw-3/web/src/utils/getValidationErrors.ts"],"names":["getValidatorError","err","validationError","inner","forEach","error","path","message"],"mappings":"AAOA,eAAe,SAASA,iBAAT,CAA2BC,GAA3B,EAAyD;AACtE,QAAMC,eAAuB,GAAG,EAAhC;AAEAD,EAAAA,GAAG,CAACE,KAAJ,CAAUC,OAAV,CAAmBC,KAAD,IAAW;AAC3BH,IAAAA,eAAe,CAACG,KAAK,CAACC,IAAP,CAAf,GAA8BD,KAAK,CAACE,OAApC;AACD,GAFD;AAIA,SAAOL,eAAP;AACD","sourcesContent":["import { error } from 'console'\nimport { ValidationError } from 'yup'\n\ninterface Errors {\n  [key: string]: string;\n}\n\nexport default function getValidatorError(err: ValidationError): Errors {\n  const validationError: Errors = {}\n\n  err.inner.forEach((error) => {\n    validationError[error.path] = error.message\n  })\n\n  return validationError\n}"]},"metadata":{},"sourceType":"module"}